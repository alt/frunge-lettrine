% \iffalse
%% File: frunge-lettrine.dtx by Arno Trautmann, mail: arno dot trautmann at gmx dot de
%<*driver>
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
\input docstrip.tex
\askforoverwritefalse
\preamble
EXPERIMENTAL CODE

Do not distribute this file without also distributing the
source files specified above.

Do not distribute a modified version of this file under the same name.
\endpreamble
\keepsilent
\generate{\file{frunge-lettrine.sty}{\from{frunge-lettrine.dtx}{package}}}

\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
\def\packageversion{27.\,02.\,2010 v0.f.c}
\ProvidesFile{frunge-lettrine.sty}%
  [\packageversion\ using lettrine to produce beautiful frunge-based documents]
\documentclass{gmdocc}
\usepackage{
  hyperref,
  polyglossia,
  xcolor
}
\hypersetup{
  pdfborder= 0 0 0,
  colorlinks=true,
  linkcolor=deepblue,
  filecolor=blue
}
\setmainlanguage{english}
\setmainfont{TeX Gyre Pagella}
\def\marginpartt{\scriptsize\ttfamily}

\title{|frunge-lettrine|}
\author{Arno Trautmann\\ \href{mailto:arno.trautmann@gmx.de}{arno.trautmann@gmx.de}}
\date{\packageversion}

\begin{document}
\maketitle
\begin{abstract}
This is the documentation of the package |frunge-lettrine|. It aims to offer a simple way to use beautiful, {\color{blue}mul\color{red}ti}colored initials at the beginning of every paragraph. These initials are taken from \emph{different} OpenType fonts, one of them providing the letter itself, and others providing the ornaments. Also, a thin line can be set under each line of types to simulate the old handwritings and very early printings.

Based on the frunge project, it will take some time to be really usefull. If you want to contribute to frunge, just google it and mail to the projet mailing list ;)
\end{abstract}
\tableofcontents
\newpage
\section{Prerequisites}
As this package needs special fonts so typeset initials, you have to provide them: One \emph{main} font contains the initial itself, i.\,e. the letter. Another font contains the ornaments for the initial. Only this way multiple colors are possible. Theoretically, more than one ornament is possible, but there are no fonts so far that would provide this. If you need support for multi-ornament fonts, please contact me. I will provide a hook to implement it – if you share the fonts with me :)
\section{Usage}
\label{sec:usage}
Load the package by saying
\begin{verbatim}
\usepackage[options]{frunge-lettrine}
\end{verbatim}
in the preamble. To use a font for the initial letter, say for example
\begin{verbatim}
\setfrlet{mainfont}{\fontspec{FloralCapsLettrine}}
\setfrlet{ornamentfont}{\fontspec{FloralCapsLettrine_ornaments1}}
\end{verbatim}
in the preamble. The two font elements can be chosen independently and can contain anything. \footnote{Writing text in here would cause that text to appear at every paragraph. But that is \emph{not} the right usage of this package.} Nevertheless, you should constrain yourself to font-related commands, like |\fontspec|. |\normalfont| is possible, too, etc.

Future relaeses might be capable to handle several ornament fonts; this is not possible so far!

\subsection{Package Options}
\let\olditem\item
\def\item[#1]{\olditem[\color{deepblue}#1]\ \newline }

\begin{description}
\item[disable] disable “lettrination“ – just use the thin line under the letters (so far, the package does nothing at all if |disalbe| is given)
\item[draft] in |draft| mode, no ornaments are printed, no thin lines, but only the big letters. Must be given explicitly (cannot be taken from documentclass |draft|!)
\item[oldpaper] Well, this is more a kind of fun-option: As the old book we want to imitate here, are mostly quite – old. And so is their paper. With this option, the pagecolor will be set to the rgb value |0.956 0.743 0.496|. That is surely nothing really meaningful, but maybe it will be useful in future relaeses. Maybe a nice background structure could be used to imitate a smooth, old paper.
\item[folation] The old books were not numbered by pages, but by sheets. Activating this option will imitate this behaviour.
\item[rubricate] Not yet implemented.
\end{description}

\subsubsection{Fonts}
The main font and the ornament font must be given via macro, see |\setfrlet| below.
\begin{description}
\item[maincolor =] sets the main color of the lettrines (mostly black)
\item[ornamentcolor =] color used for the ornaments (e.\,g. red)
\item[random=]  (not yet implemented) choose a ”randomization“ to get different glyphs in the text (shouldn’t look boring, should it?)
\item[lines=] Sets the number of lines for the lettrines (default is 2)
\end{description}

\subsubsection{Thin Line}
\begin{description}
\item[thinline=] Enables the thin line under letters and sets the thickness to the given amount. See line \ref{thinline} below.
\item[depth=] Sets the depth of this thin line. Defaults to |depth=0pt|.
\end{description}

\subsection{Macro Commands}
\def\item[#1]{\olditem[\color{deepblue}\textbackslash #1]\ \newline}
\begin{description}
\item[setfrlet] All of the key-value type package options (like |random|, |font| …) can be changed at every place in the document by |\setfrlet|, e.\,g. |\setfrlet{lines}{4}| will cause the lettrines to take 4 instead of 2 lines at the next occurance. |\setfrlet{mainfont}{...}| will change the font used for the initials.
\item[disablefrlet] Disable the lettrination
\item[enablefrlet] Re-enable lettrination. See line \ref{sec:disableenable} for further details
\item[foliatehead/foot] These macros will add foliation to your document. In old tomes, not the pages were count, but the folios. Say |\foliatehead[f.\,]{-1.5cm}{2cm}| \emph{in the preamble} to get the foliation at 1.5cm \emph{below} the position of the pagehead and 2cm outside of the text. The optional argument will be set in front of the number, e.\,g. f.\,26\textsuperscript{r}.
\\ |\foliatefoot[f.\,]{1.5cm}{2cm}| is analogous.
\end{description}

\section{Thanks}
This package would be useless without the wonderfull lettrine package by Daniel Flipo. And it would have never been born without the help of Paul Isambert, who actually wrote all the important code. Thanks a lot!

\section{Implementation}
\DocInput{frunge-lettrine.dtx}
\end{document}
%</driver>
%
%<*package>
% \fi
% First, initialization of the booleans and default values:
% \begin{macrocode}
\RequirePackage{ifthen}
\newboolean{frlet@disable}
\newboolean{frlet@printthinline}
\newboolean{frlet@draft}
\newboolean{frlet@rubricate}
\newboolean{frlet@oldpaper}
%
\setboolean{frlet@disable}{false}
\setboolean{frlet@printthinline}{false}
\setboolean{frlet@draft}{false}
\setboolean{frlet@oldpaper}{false}
% Default values of other parameters:
\def\frlet@maincolor{black}
\def\frlet@ornamentcolor{red}
\def\frlet@thinline{.1pt}
\def\frlet@lines{2}
\def\frlet@kern@ornament{-.2em}
\def\frlet@raise@ornament{.2ex}
\def\frlet@depth{0pt}

\newcounter{frlet@linessincepar}
% 
% Definition of the package options and processing by |xkeyval| and evaluation:
\RequirePackage{xkeyval}
% General options:
\DeclareOptionX{disable}{\setboolean{frlet@disable}{true}}
\DeclareOptionX{draft}{\setboolean{frlet@draft}{true}}
% Font-dependent options:
\DeclareOptionX{font}{\def\frlet@font{#1}}
\DeclareOptionX{maincolor}{\def\frlet@maincolor{#1}}
\DeclareOptionX{ornamentnumber}{\def\frlet@ornamentnumber{#1}}
\DeclareOptionX{ornamentcolor}{\def\frlet@ornamentcolor{#1}}
\DeclareOptionX{ornamentcolor2}{\expandafter\def\csname\frlet@ornamentcolor2\endcsname{#1}}
\DeclareOptionX{random}{\def\frlet@random{#1}}
% Options regarding the layout of the capitals:
\DeclareOptionX{lines}{\def\frlet@lines{#1}}
\DeclareOptionX{depth}{\def\frlet@depth{#1}}
% Set the thin line or don’t:
\DeclareOptionX{thinline}{\setboolean{frlet@printthinline}{true}\def\frlet@thinline{#1}}
% More general layout:
\DeclareOptionX{rubricate}{\setboolean{frlet@rubricate}{true}}
\DeclareOptionX{oldpaper}{\setboolean{frlet@oldpaper}{true}}
\ProcessOptionsX
% \end{macrocode}
% If |disable| is given, the package will define |\setfrlet|, |\setfrletbool| and |\foliationhead| to dummy macros so no error will be raised when testing. Then loading is stopped:
% \begin{macrocode}
\ifthenelse{
	\boolean{frlet@disable}}
	{\newcommand\foliationhead[3][]{}\newcommand\setfrlet[2]{}\newcommand\setfrletbool[2]{}
	\endinput}{}%
%
\DeclareRobustCommand\setfrlet[2]{\expandafter\def\csname frlet@#1\endcsname{#2}}
\DeclareRobustCommand\setfrletbool[2]{\setboolean{frlet@#1}{#2}}
\setfrlet{mainfont}{\normalfont}
\setfrlet{ornamentfont}{\itshape}
%
% \end{macrocode}
% Load the needed packages; lettrine for the capitals, linen for the thin line.
% \begin{macrocode}
\RequirePackage{
  expl3,
  lettrine,
  lineno,
  xcolor
}
% \end{macrocode}
% \subsection{Page Layout}
% \subsubsection{Foliation}
% This will add the foliation. It’s not a very smart way, but the page header/footer is used for this, as it offers a very easy hook. But then the head/foot cannot be used for something else.
% \begin{macro}{foliatefoot/head} Therefore, both macros are offered. You still can set every single element of the page/foot via the usual commands for |scrpage2|. If you \emph{really} need both inner/outer head and foot for something else but foliation … maybe you shoud re-think your page layout …
% 
% The first two macros are user-level wrapper for the third one.
% \begin{macrocode}
\newcommand\foliationfoot[3][]{\def\frlet@foliate@pos{foot}\frlet@foliate{#2}{#3}{#1}}
\newcommand\foliationhead[3][]{\def\frlet@foliate@pos{head}\frlet@foliate{#2}{#3}{#1}}
% 
\def\frlet@foliate#1#2#3{%
  \newcounter{frlet@sheet}
  \RequirePackage{scrpage2}
  \pagestyle{scrheadings}
  \ofoot{}
  \csname le\frlet@foliate@pos\endcsname{\raisebox{#1}{\kern-#2 #3\thefrlet@sheet\textsuperscript{v}}}
  \csname ro\frlet@foliate@pos\endcsname{\raisebox{#1}{\stepcounter{frlet@sheet} #3\thefrlet@sheet\textsuperscript{r}}\kern-#2}
}
% \end{macrocode}
% \end{macro}
% \subsection{Rubricate}
%Rubricate means to use red color for to emphasize something, especially headings. We don’t need that to implement here as headings are done via the document class. But sometimes also every beginning of a sentence is emphasized by rubrication. Or even every uppercase letter. Both of these variants are implemented here and can be used with the option |rubricate=sentence| or |=uppercase|. We use the \XeTeX\ |interchartok| mechanism for this. Thanks to Stefan for helping me to figure out the code!
% \begin{macrocode}
\ExplSyntaxOn
\newXeTeXintercharclass\frlet@lowercase
\newXeTeXintercharclass\frlet@uppercase
\def\frlet@color#1{\XeTeXinterchartokenstate=0 \textcolor{red}{#1}\XeTeXinterchartokenstate=1#1}

\XeTeXinterchartoks \frlet@uppercase \frlet@lowercase = {}
\XeTeXinterchartoks 255 \frlet@uppercase = {\frlet@color}

\cs_new:Npn\latin_classes:n#1{
   \XeTeXcharclass #1 = \frlet@uppercase
   \XeTeXcharclass \intexpr_eval:n{#1+32} = \frlet@lowercase
}
\prg_stepwise_function:nnnN{65}{1}{90}\latin_classes:n
\ExplSyntaxOff
% \end{macrocode}
% \subsection{Capitals}
%\begin{macro} We want to modify |\lettrine| a bit, so we define a wrapper macro. The hooks |\frlet@before| and |\frlet@after| are used to implement additional code.
% \begin{macrocode}
\def\frlet@capital{\frlet@c@pital}
%%
\def\frlet@c@pital#1#2{%
\XeTeXinterchartokenstate=0
  \setcounter{DefaultLines}{\frlet@lines}%
  \vspace{-\baselineskip}  %% else the first line would be too low
  \let\makeLineNumber\relax %% and activate the line again
  \frlet@before%
  \lettrine{%
    \iffrlet@draft\else%
      \hbox to 0cm{%
        \frlet@ornamentfont \color{\frlet@ornamentcolor}%
        \kern\frlet@kern@ornament%
        \vbox to 0pt{\vspace*{-\baselineskip}%
          \raisebox{\frlet@raise@ornament}{#1}%
	}%
      }%
    \fi%
    \frlet@mainfont\color{\frlet@maincolor}#1%
  }{}% end of lettrine
% \end{macrocode}
% If the |draft| option is given, no ornaments and thin lines should be printed.
% \begin{macrocode}
  \iffrlet@draft
    #2\unskip
  \else
\setlength{\unitlength}{1\baselineskip}
\begin{picture}(0,0)%
\multiput(0,0)(0,-1){\theDefaultLines}{\hbox to 1\linewidth{\hrulefill}X}%
\end{picture}%
    \MakeUppercase{#2}%
    \setcounter{frlet@linessincepar}{0}%
  \fi%
  \let\makeLineNumber\frlet@check@line%
  \frlet@after%
\XeTeXinterchartokenstate=1
}
\def\frlet@after{}%
\def\frlet@before{}%

\def\frlet@check@line{
  \ifnum \thefrlet@linessincepar < \theDefaultLines
    \stepcounter{frlet@linessincepar}
  \else
    \frlet@line  %% set the line for the first time, then switch
    \global\let\makeLineNumber\frlet@line
  \fi
}
% \end{macrocode}
% \end{macro}
% \begin{macrocode}
\newcommand{\raiseornament}[1]{\def\frlet@raise@ornament{#1}}
\newcommand{\kernbeforelettrine}[1]{}
\newcommand{\kernafterlettrine}[1]{}
\newcommand{\kernornament}[1]{\def\frlet@kern@ornament{#1}}
% \end{macrocode}
% This wrapper should be used at every paragraph. As |lettrine| internally works with paragraphs, too, the |\everypar| macro is used to alternate itself at every occurance.\footnote{Paul, you are a genius!} This must be set at begin document:
% \begin{macrocode}
\AtBeginDocument{%
  \def\neweverypar{\everypar={\everypar={\neweverypar\frlet@capital}}}%
  \everypar={\neweverypar\frlet@capital}%
% \end{macrocode}
% As the |\section| macro uses |\everypar| as well, it needs to be redefined to not crash every time:
% \begin{macrocode}
  \let\@Startsection\@startsection
  \def\@startsection{%
  \everypar{}%
  \@Startsection}%
  \let\@Xsect\@xsect%
  \def\@xsect#1{%
  \@Xsect{#1}%
  \everypar\expandafter{\the\everypar\neweverypar\frlet@capital}%
  \ignorespaces}%
% \end{macrocode}
% Mathmode would kill the document as it uses paragraphs as well. So frlet must be escaped which is done bye the following code. This might cause problems as the definition of |\[| might change inside the document. If this happens to you, please contact me!
% 
% Usage of \TeX s |$$| is not possible. If you need it, you manually have to |\disablefrlet|.
% \begin{macrocode}
  \let\oldmathbegin\[
  \def\[{\disablefrlet\oldmathbegin}
  \let\oldmathend\]
  \def\]{\oldmathend\enablefrlet}
% \end{macrocode}
% The imitation of old paper will be activated at begin document, too:
% \begin{macrocode}
  \ifthenelse{\boolean{frlet@oldpaper}}{\pagecolor[rgb]{0.956 0.743 0.496}}{}
}
% \end{macrocode}
% The lettrines should be able to be disabled and enabled in the document. The following user-level macros do so. But they might do strange things, so be careful!
% \label{sec:disableenable}
% \begin{macrocode}
\def\disablefrlet{\def\frlet@capital{}}
\def\enablefrlet{\def\frlet@capital{\frlet@c@pital}\everypar\expandafter{\the\everypar\neweverypar\frlet@capital}}
% \end{macrocode}
% \subsection{Thin Line}
% \label{thinline}
% Typesetting this fine, thin line\footnote{If anybody knows how this is called, \emph{please} tell me so I can call it by name …} is at the moment implemented by hacking the lineno-package and substituting the line number by the thin line.
% \begin{macrocode}
\def\frlet@line{%
  \linethickness{0.01ex}%
  \color{gray}%
  \hbox to \columnwidth{\hrulefill}%
}
\iffrlet@draft\else
  \iffrlet@printthinline%
    \linenumbers
    \let\makeLineNumber\frlet@line
  \fi
\fi
% \end{macrocode}
% \section{Example}
% A short example how to use this package in real life:
% \begin{verbatim}
% \usepackage[
%   thinline,
%   line=.05pt,
%   maincolor=black,
%   ornamentcolor=red,
% ]{frunge-lettrine}
% \setfrlet{mainfont}{\fontspec{FloralCapsLettrine}}
% \setfrlet{ornamentfont}{\fontspec{FloralCapsLettrine_ornaments1}}
% \begin{document}
% Th{is is a first paragraph to test this package.}
% 
% T{his}{ is a second one trying to set three letters in upper case.}
% \end{document}
% \end{verbatim}
% \section{\color{deepblue}To Do\,/\,\color{red}Known Bugs}
% A short section to list all things that might be nice to implement:
% \begin{description}
% \def\item[#1]{\olditem[\color{deepblue}#1]\ \newline }
% \def\bugitem[#1]{\olditem[\color{red}#1]\ \newline }
% \item[speed] This package slows down the compilation dramatically! A document takes about three times longer than without this package. So use option |disable| if you don’t need it. If you need correct setting, use |draft|. That way it is only half as fast. So far, |draft| is not reliable at reproducing the correct typesetting. So a 1000-paged document might cause some troubles …
% \bugitem[math] Display math is \emph{not} possible any more!
% \item[colors] It might be nice to use three or four colors for every lettrine. So three or four ornaments must be used. Should not be a big problem to implement, but a great problem for a font designer …
% \item[key-value] A key-value interface for the |\setfrlet| should be offered instead of the stupid implementation at the moment.
% \end{description}
% \Finale
% \endinput